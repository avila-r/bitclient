[main]
use = "bitclient"
short = "A Go-based CLI JSON-RPC client for interacting with a Bitcoin Core daemon."
long = "Bitclient is a command-line interface (CLI) written in Go, designed for interacting with a Bitcoin Core daemon through JSON-RPC. It can connect to either a local full node or a remote Bitcoin node, allowing users to perform Bitcoin-related operations, such as querying blockchain data, creating transactions, and managing their node via RPC calls. This tool provides an alternative to bitcoin-cli, offering a more user-friendly and scriptable CLI interface for Bitcoin Core."

[info]
license = "MIT"
author = "R. √Åvila"
version = "0.0.1"
repository = "https://github.com/avila-r/bitclient"

[advanced]
debug = false

[commands]

[commands.config]
use = "config"
short = "Print configuration details"
long = "The 'config' command displays the current configuration details loaded from the config.toml file."

[commands.blockchain]
use = "blockchain"
short = "Interact with the blockchain"
long = "The 'blockchain' command allows interaction with the blockchain, including retrieving information and performing actions like checking blockchain status."
[commands.blockchain.info]
use = "info"
short = "Get information about the blockchain"
long = "The 'info' subcommand retrieves detailed information about the blockchain, such as the current block height, best block hash, chain status, and other relevant blockchain data."

[commands.blocks]
use = "blocks"
short = "Interact with Bitcoin blocks"
long = "The 'blocks' command provides tools to interact with individual blocks in the blockchain. You can retrieve block information, validate blocks, and set verbosity levels for block data."
[commands.blocks.get]
use = "get [block]"
short = "Retrieve information about a specific block"
long = "The 'get' subcommand retrieves detailed information about a specific block in the blockchain. You must provide the block hash to use this command. Verbosity levels can be set to control the granularity of the block data returned. Use this command to inspect or find detailed block data."
[commands.blocks.filter]
use = "filter [block]"
short = "Filter and retrieve specific block data"
long = "The 'filter' subcommand allows you to filter and retrieve specific data from a block. Use this command to focus on particular aspects or properties of a block, such as transactions or metadata."
[commands.blocks.hash]
use = "hash [block]"
short = "Retrieve the hash of a specific block"
long = "The 'hash' subcommand retrieves the block hash for a given block. Provide the block's height or identifier to get its unique hash value, which is critical for verification and blockchain operations."
[commands.blocks.header]
use = "header [block]"
short = "Retrieve the header of a specific block"
long = "The 'header' subcommand retrieves the header information of a block, including metadata such as block size, timestamp, and the previous block hash. This is useful for understanding the context and structure of the block."
[commands.blocks.stats]
use = "stats [block]"
short = "Retrieve statistical data about a block"
long = "The 'stats' subcommand provides statistical data about a block, such as transaction count, block size, and other metrics that help in analyzing the block's characteristics within the blockchain."
